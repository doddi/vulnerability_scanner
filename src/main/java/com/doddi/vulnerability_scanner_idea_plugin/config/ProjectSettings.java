package com.doddi.vulnerability_scanner_idea_plugin.config;

import com.intellij.openapi.components.PersistentStateComponent;
import com.intellij.openapi.components.ServiceManager;
import com.intellij.openapi.components.State;
import com.intellij.openapi.components.Storage;
import com.intellij.openapi.diagnostic.Logger;
import com.intellij.openapi.project.Project;
import com.intellij.util.xmlb.XmlSerializerUtil;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@State(
    name = "Vulnerability.Scanner.ProjectSettings",
    storages = {@Storage(value = "vulnerability_scanner.xml")}
)
public class ProjectSettings
    implements PersistentStateComponent<ProjectConfiguration>
{
  private static final Logger LOGGER = Logger.getInstance(ProjectSettings.class);

  private ProjectConfiguration projectConfiguration;

  public static ProjectSettings getInstance(final Project project) {
    return ServiceManager.getService(project, ProjectSettings.class);
  }

  public ProjectSettings() {
    this.projectConfiguration = new ProjectConfiguration();
  }

  public void setConfiguration(final ProjectConfiguration projectConfiguration) {
    this.projectConfiguration = projectConfiguration;
  }

  @Nullable
  @Override
  public ProjectConfiguration getState() {
    return projectConfiguration;
  }

  @Override
  public void loadState(@NotNull final ProjectConfiguration state) {
    projectConfiguration = XmlSerializerUtil.createCopy(state);
    LOGGER.info(String.format("Loaded: %s", projectConfiguration));
  }

  public boolean isConfigured() {
    return false;
  }
}
