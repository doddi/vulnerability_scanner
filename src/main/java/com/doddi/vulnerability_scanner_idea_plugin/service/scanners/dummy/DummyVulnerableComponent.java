package com.doddi.vulnerability_scanner_idea_plugin.service.scanners.dummy;

import org.sonatype.ossindex.service.api.componentreport.ComponentReportVulnerability;

import com.doddi.vulnerability_scanner_idea_plugin.entity.VulnerableComponent;

public class DummyVulnerableComponent
    extends VulnerableComponent<ComponentReportVulnerability>
{
  @Override
  public String buildPackageInformation(final String currentScannerName, final String currentScannerLink) {
    final StringBuffer stringBuffer = new StringBuffer();
    buildTitle(currentScannerName, currentScannerLink, stringBuffer);

    stringBuffer.append(String.format("\n\n<i>%s</i>: contains ", this.getPackageUrl().toString()));
    stringBuffer.append(String.format("<b>%d</b> ", this.getReports().size()));
    stringBuffer.append(getVulnerabilityString(this.getReports().size()));
    stringBuffer.append("\n\n<ul>");
    this.getReports().forEach(v -> {
      stringBuffer.append("<li>");
      stringBuffer.append(buildLink(v.getTitle(), v.getReference().toString()));
      stringBuffer.append("</li>");
    });
    stringBuffer.append("</ul>");
    return stringBuffer.toString();
  }

  protected void buildTitle(String providerName, String provideUrl, StringBuffer stringBuffer) {
    stringBuffer.append("Vulnerability information Provided by: ");
    stringBuffer.append(buildLink(providerName, provideUrl));
  }

  protected String getVulnerabilityString(int vulnerable) {
    return vulnerable == 1 ? "vulnerability" : "vulnerabilities";
  }

  String getComponentString(int component) {
    return component == 1 ? "component" : "components";
  }

  protected String buildLink(String title, String link) {
    return String.format("<a href=%s>%s</a>", link, title);
  }
}
