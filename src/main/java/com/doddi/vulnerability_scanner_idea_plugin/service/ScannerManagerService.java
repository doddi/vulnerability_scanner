package com.doddi.vulnerability_scanner_idea_plugin.service;

import java.util.List;

import org.sonatype.goodies.packageurl.PackageUrl;

import com.doddi.vulnerability_scanner_idea_plugin.config.ApplicationSettings;
import com.doddi.vulnerability_scanner_idea_plugin.entity.VulnerableComponent;
import com.intellij.openapi.components.ServiceManager;
import com.intellij.openapi.diagnostic.Logger;
import com.intellij.openapi.project.Project;

public class ScannerManagerService
{
  public static final Logger LOGGER = Logger.getInstance(ScannerManagerService.class);

  public static ScannerManagerService getInstance() {
    return ServiceManager.getService(ScannerManagerService.class);
  }

  private ScannerService scannerInstance() {
    final ApplicationSettings applicationSettings = ApplicationSettings.getInstance();
    if (applicationSettings.getState() != null && applicationSettings.getState().getScannerConfigName() != null) {
      final String scannerConfigName = applicationSettings.getState().getScannerConfigName();
      final Class<? extends ScannerService> scannerService = ApplicationSettings.getScannerService(scannerConfigName);
      return ServiceManager.getService(scannerService);
    }

    throw new RuntimeException("Unable to create scanner!");
  }

  public String getCurrentScannerName() {
    return scannerInstance().getName();
  }

  public String getCurrentScannerLink() {
    return scannerInstance().getUrl();
  }

  public List<VulnerableComponent> scan(final Project project, final List<PackageUrl> componentsToScan) {
    return scannerInstance().scan(project, componentsToScan);
  }
}
