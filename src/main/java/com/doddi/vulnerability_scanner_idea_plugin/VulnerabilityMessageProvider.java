package com.doddi.vulnerability_scanner_idea_plugin;

import java.util.List;

import com.doddi.vulnerability_scanner_idea_plugin.entity.VulnerableComponent;

public class VulnerabilityMessageProvider {

    public static String buildToolMessage(String providerName, String provideUrl, List<VulnerableComponent> components) {
        final StringBuffer stringBuffer = new StringBuffer();
        buildTitle(providerName, provideUrl, stringBuffer);

        stringBuffer.append(String.format("\n%d vulnerable %s detected", components.size(), getComponentString(components.size())));
        stringBuffer.append("\n\n<ul>");
        components.forEach( c -> stringBuffer.append(String.format("<li>%s</li>", c.getPackageUrl().toString())));
        stringBuffer.append("</ul>");
        return stringBuffer.toString();
    }

    public static String buildGutterMessage(String name, String url, VulnerableComponent component) {
        final StringBuffer stringBuffer = new StringBuffer();
        buildTitle(name, url, stringBuffer);

        stringBuffer.append(String.format("\n\n<i>%s</i>: contains ", component.getPackageUrl().toString()));
        stringBuffer.append(String.format("<b>%d</b> ", component.getVulnerabilities().size()));
        stringBuffer.append(getVulnerabilityString(component.getVulnerabilities().size()));
        stringBuffer.append("\n\n<ul>");
        component.getVulnerabilities().forEach(v -> {
            stringBuffer.append("<li>");
            stringBuffer.append(buildLink(v.getTitle(), v.getReference().toString()));
            stringBuffer.append("</li>");
        });
        stringBuffer.append("</ul>");
        return stringBuffer.toString();
    }

    private static void buildTitle(String providerName, String provideUrl, StringBuffer stringBuffer) {
        stringBuffer.append("Vulnerability information Provided by: ");
        stringBuffer.append(buildLink(providerName, provideUrl));
    }

    private static String getVulnerabilityString(int vulnerable) {
        return vulnerable == 1 ? "vulnerability" : "vulnerabilities";
    }

    private static String getComponentString(int component) {
        return component == 1 ? "component" : "components";
    }

    private static String buildLink(String title, String link) {
        return String.format("<a href=%s>%s</a>", link, title);
    }
}
