package com.doddi.vulnerability_scanner_idea_plugin.listener.maven;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class JarParser
{
  public static final Logger LOGGER = LoggerFactory.getLogger(JarParser.class);

  public static List<String> findClasses(final String fileName) {
    LOGGER.debug("Retrieving classes for {}", fileName);

    List<String> classNames = new ArrayList<>();
    final File file = new File(fileName);
    try(ZipInputStream zip = new ZipInputStream(new FileInputStream(file))) {
      for (ZipEntry entry = zip.getNextEntry(); entry != null; entry = zip.getNextEntry()) {
        if (!entry.isDirectory() && entry.getName().endsWith(".class")) {
          // This ZipEntry represents a class. Now, what class does it represent?
          String className = entry.getName().replace('/', '.'); // including ".class"
          classNames.add(className.substring(0, className.length() - ".class".length()));
        }
      }
    }
    catch (IOException e) {
      LOGGER.error("Error looking up classes for {}", fileName, e);
    }

    return classNames;
  }
}
