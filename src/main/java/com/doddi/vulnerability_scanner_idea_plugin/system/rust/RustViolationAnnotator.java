package com.doddi.vulnerability_scanner_idea_plugin.system.rust;

import com.doddi.vulnerability_scanner_idea_plugin.system.ViolationAnnotator;
import com.intellij.lang.annotation.AnnotationHolder;
import com.intellij.psi.PsiElement;
import org.jetbrains.annotations.NotNull;
import org.rust.lang.core.psi.RsUseItem;
import org.rust.lang.core.psi.RsUseSpeck;
import org.rust.lang.core.psi.impl.RsUseItemImpl;

public class RustViolationAnnotator implements ViolationAnnotator {
    @Override
    public void annotate(@NotNull PsiElement element, @NotNull AnnotationHolder holder) {
        if (element instanceof RsUseItem) {
            RsUseSpeck useSpeck = ((RsUseItemImpl) element).getUseSpeck();
            if (useSpeck != null && useSpeck.getTextLength() > 0) {
                final String use = useSpeck.getText();
                final String[] split = use.split("::");

                showIfVulnerable(element.getProject(), holder, element.getTextRange(), split[0]);
            }
        }
    }
}
