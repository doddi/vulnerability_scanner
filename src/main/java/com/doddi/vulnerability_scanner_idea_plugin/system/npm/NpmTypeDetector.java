package com.doddi.vulnerability_scanner_idea_plugin.system.npm;

import java.util.Set;
import java.util.stream.Collectors;

import org.sonatype.goodies.packageurl.PackageUrl;
import org.sonatype.goodies.packageurl.PackageUrlBuilder;

import com.doddi.vulnerability_scanner_idea_plugin.entity.LibraryToScan;
import com.doddi.vulnerability_scanner_idea_plugin.system.FileBasedDetector;
import com.doddi.vulnerability_scanner_idea_plugin.system.npm.packagelock.PackageLock;
import com.doddi.vulnerability_scanner_idea_plugin.system.npm.packagelock.PackageLockReader;
import com.intellij.openapi.project.Project;

public class NpmTypeDetector
    extends FileBasedDetector
{
  public static final String NPM_TYPE = "npm";

  private final PackageLockReader lockReader;

  public NpmTypeDetector() {
    super("package-lock.json", NpmPopulator.class);
    lockReader = new PackageLockReader();
  }

  @Override
  public Set<LibraryToScan> getLibraryToScans(final Project project) {
    final String packageLockFile = project.getPresentableUrl() + "/" + filename;
    final PackageLock packageLock = lockReader.read(packageLockFile);

    return parseLibraries(packageLock);
  }

  private Set<LibraryToScan> parseLibraries(final PackageLock packageLock) {
    return packageLock.getDependencies().entrySet().stream()
        .map(e -> {
          final PackageUrl packageUrl = new PackageUrlBuilder().type("npm").name(e.getKey())
              .version(e.getValue().getVersion())
              .build();
          return new LibraryToScan(packageUrl, null);
        })
        .collect(Collectors.toSet());
  }
}
