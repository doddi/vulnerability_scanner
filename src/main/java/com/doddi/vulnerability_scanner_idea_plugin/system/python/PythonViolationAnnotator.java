package com.doddi.vulnerability_scanner_idea_plugin.system.python;

import com.doddi.vulnerability_scanner_idea_plugin.system.ViolationAnnotator;
import com.intellij.lang.annotation.AnnotationHolder;
import com.intellij.psi.PsiElement;
import com.jetbrains.python.psi.PyFromImportStatement;
import com.jetbrains.python.psi.PyImportStatement;
import com.jetbrains.python.psi.PyReferenceExpression;
import org.jetbrains.annotations.NotNull;

public class PythonViolationAnnotator
    implements ViolationAnnotator
{
  @Override
  public void annotate(@NotNull final PsiElement element, @NotNull final AnnotationHolder holder) {
    if (element instanceof PyFromImportStatement) {
      final PyReferenceExpression importSource = ((PyFromImportStatement) element).getImportSource();
      showIfVulnerable(element.getProject(), holder, element.getTextRange(), importSource.getName());
    }
    else if (element instanceof PyImportStatement) {
      final PyImportStatement importStatement = (PyImportStatement) element;
      if (importStatement.getImportElements().length == 1) {
        showIfVulnerable(element.getProject(),
            holder, element.getTextRange(), importStatement.getFullyQualifiedObjectNames().get(0));
      }
    }
  }
}
