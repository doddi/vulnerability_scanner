package com.doddi.vulnerability_scanner_idea_plugin.system.golang;

import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;

import com.doddi.vulnerability_scanner_idea_plugin.entity.LibraryToScan;
import com.doddi.vulnerability_scanner_idea_plugin.entity.VulnerableComponent;
import com.doddi.vulnerability_scanner_idea_plugin.system.Populator;
import com.intellij.openapi.components.ServiceManager;
import com.intellij.openapi.project.Project;

public class GolangPopulator
    extends Populator
{
    static public GolangPopulator getInstance(final Project project) {
        return ServiceManager.getService(project, GolangPopulator.class);
    }

    @Override
    public void populate(final Set<LibraryToScan> libraries, final List<VulnerableComponent> vulnerableComponents) {
        components.clear();
        vulnerableComponents.forEach(component -> components.put(component.getPackageUrl().toString(), component));
    }

    @Override
    public Map<String, VulnerableComponent> getVulnerableComponents() {
        return components;
    }

    @Override
    public Optional<VulnerableComponent> isVulnerable(final String name) {
        return components.values().stream()
                .filter(vulnerableComponent -> name.startsWith(
                    Objects.requireNonNull(vulnerableComponent.getPackageUrl().getNamespaceAsString())))
                .findFirst();
    }
}
