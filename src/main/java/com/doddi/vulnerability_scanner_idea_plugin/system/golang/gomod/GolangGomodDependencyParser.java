package com.doddi.vulnerability_scanner_idea_plugin.system.golang.gomod;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

import com.doddi.vulnerability_scanner_idea_plugin.entity.LibraryToScan;
import com.google.common.io.LineReader;
import com.intellij.openapi.diagnostic.Logger;


public class GolangGomodDependencyParser
{
  public static final Logger LOGGER = Logger.getInstance(GolangGomodDependencyParser.class);

  public Set<LibraryToScan> getDependencies(String fileName) {
    Set<LibraryToScan> libraryToScans = new HashSet<>();

    try {
      LineReader reader = new LineReader(new FileReader(fileName));

      String line = reader.readLine();
      GomodParser parser = null;
      while (line != null && parser == null) {
        line = line.trim();
        if (line.startsWith("require") && line.contains("(")) {
          // This mode is a single require that wraps all imports
          parser = new GomodWrappedParser(reader);
        }
        else if (line.startsWith("require")) {
          // This mode is a require per import
          parser = new GomodIndividualParser(reader);
        }

        if (parser == null) {
          line = reader.readLine();
        }
      }
      return parser.parse(line);
    }
    catch (FileNotFoundException e) {
      LOGGER.error("Unable to read go.mof file");
    }
    catch (IOException e) {
      LOGGER.warn("Unable to parse go.mod file");
    }

    return libraryToScans;
  }
}

