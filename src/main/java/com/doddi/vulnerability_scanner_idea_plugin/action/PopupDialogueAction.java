package com.doddi.vulnerability_scanner_idea_plugin.action;

import java.util.ArrayList;
import java.util.List;

import com.doddi.vulnerability_scanner_idea_plugin.VulnerabilityMessageProvider;
import com.doddi.vulnerability_scanner_idea_plugin.entity.VulnerableComponent;
import com.doddi.vulnerability_scanner_idea_plugin.service.ScannerManagerService;
import com.doddi.vulnerability_scanner_idea_plugin.service.VulnerabilityService;
import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.components.ServiceManager;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.Messages;
import org.apache.commons.compress.utils.Lists;
import org.jetbrains.annotations.NotNull;

public class PopupDialogueAction
    extends AnAction
{
  @Override
  public void update(@NotNull final AnActionEvent e) {
    final Project project = e.getProject();
    e.getPresentation().setEnabledAndVisible(project != null);
  }

  @Override
  public void actionPerformed(@NotNull final AnActionEvent event) {
    if (event.getProject() == null) {
      return;
    }

    final ScannerManagerService scannerManagerService = ScannerManagerService.getInstance();

    if (event.getProject() != null && scannerManagerService != null) {
      final List<VulnerableComponent> vulnerableComponents = getListOfVulnerableComponents(event.getProject());

      String message = VulnerabilityMessageProvider
          .buildToolMessage(scannerManagerService.getCurrentScannerName(),
              scannerManagerService.getCurrentScannerLink(), vulnerableComponents);

      Messages.showMessageDialog(event.getProject(), message, event.getPresentation().getDescription(),
          Messages.getInformationIcon());
    }
  }

  @NotNull
  public ArrayList<VulnerableComponent> getListOfVulnerableComponents(final Project project) {
    final VulnerabilityService vulnerabilityService = ServiceManager
        .getServiceIfCreated(project, VulnerabilityService.class);

    if (vulnerabilityService != null) {
      return new ArrayList<>(vulnerabilityService.getVulnerableComponents().values());
    }
    return Lists.newArrayList();
  }
}
