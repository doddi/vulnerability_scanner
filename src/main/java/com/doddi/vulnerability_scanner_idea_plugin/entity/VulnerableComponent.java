package com.doddi.vulnerability_scanner_idea_plugin.entity;

import java.util.List;

import org.sonatype.goodies.packageurl.PackageUrl;
import org.sonatype.ossindex.service.api.componentreport.ComponentReportVulnerability;

public abstract class VulnerableComponent
{
  private PackageUrl packageUrl;

  private List<String> classes;

  private List<ComponentReportVulnerability> vulnerabilities;

  public PackageUrl getPackageUrl() {
    return packageUrl;
  }

  public void setPackageUrl(final PackageUrl packageUrl) {
    this.packageUrl = packageUrl;
  }

  public List<String> getClasses() {
    return classes;
  }

  public void setClasses(final List<String> classes) {
    this.classes = classes;
  }

  public List<ComponentReportVulnerability> getVulnerabilities() {
    return vulnerabilities;
  }

  public void setVulnerabilities(final List<ComponentReportVulnerability> vulnerabilities) {
    this.vulnerabilities = vulnerabilities;
  }

  public String buildPackageInformation(final String currentScannerName,
                                        final String currentScannerLink)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    buildTitle(currentScannerName, currentScannerLink, stringBuffer);

    stringBuffer.append(String.format("\n\n<i>%s</i>: contains ", this.getPackageUrl().toString()));
    stringBuffer.append(String.format("<b>%d</b> ", this.getVulnerabilities().size()));
    stringBuffer.append(getVulnerabilityString(this.getVulnerabilities().size()));
    stringBuffer.append("\n\n<ul>");
    this.getVulnerabilities().forEach(v -> {
      stringBuffer.append("<li>");
      stringBuffer.append(buildLink(v.getTitle(), v.getReference().toString()));
      stringBuffer.append("</li>");
    });
    stringBuffer.append("</ul>");
    return stringBuffer.toString();
  }

  protected void buildTitle(String providerName, String provideUrl, StringBuffer stringBuffer) {
    stringBuffer.append("Vulnerability information Provided by: ");
    stringBuffer.append(buildLink(providerName, provideUrl));
  }

  protected String getVulnerabilityString(int vulnerable) {
    return vulnerable == 1 ? "vulnerability" : "vulnerabilities";
  }

  String getComponentString(int component) {
    return component == 1 ? "component" : "components";
  }

  protected String buildLink(String title, String link) {
    return String.format("<a href=%s>%s</a>", link, title);
  }

  public int getSeverity() {
    return 10;
  }
}
