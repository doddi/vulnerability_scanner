package org.sonatype.vul_highlighter.listener;

import java.util.Map;

import org.sonatype.vul_highlighter.listener.maven.MavenProjectTypeDetector;
import org.sonatype.vul_highlighter.listener.rust.RustTypeDetector;

import com.google.common.collect.ImmutableMap;
import com.intellij.openapi.module.Module;
import com.intellij.openapi.module.ModuleManager;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.project.ProjectManagerListener;
import org.jetbrains.annotations.NotNull;

public class ProjectChangeListener implements ProjectManagerListener
{
  private final Map<String, ProjectTypeDetector> detectors;

  public ProjectChangeListener() {
    this.detectors = ImmutableMap.of(
        MavenProjectTypeDetector.JAVA_TYPE, new MavenProjectTypeDetector(),
        RustTypeDetector.RUST_TYPE, new RustTypeDetector());
  }

  @Override
  public void projectOpened(@NotNull final Project project) {
    final Module[] modules = ModuleManager.getInstance(project).getModules();
    for (Module module : modules) {
      detectors.forEach((name, detector) -> {
        if (detector.detect(module)) {
          detector.start(project);
        }
      });
    }
  }
}
