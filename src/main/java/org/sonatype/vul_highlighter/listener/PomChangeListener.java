package org.sonatype.vul_highlighter.listener;

import java.util.List;

import org.sonatype.vul_highlighter.service.VulnerabilityService;

import com.intellij.openapi.components.ServiceManager;
import com.intellij.openapi.util.Pair;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.idea.maven.model.MavenArtifact;
import org.jetbrains.idea.maven.project.MavenProject;
import org.jetbrains.idea.maven.project.MavenProjectChanges;
import org.jetbrains.idea.maven.project.MavenProjectsTree.Listener;

class PomChangeListener
    implements Listener
{
  private final VulnerabilityService vulnerabilityService;

  public PomChangeListener() {
    vulnerabilityService = ServiceManager.getService(VulnerabilityService.class);
  }

  @Override
  public void projectsUpdated(@NotNull final List<Pair<MavenProject, MavenProjectChanges>> updated,
                              @NotNull final List<MavenProject> deleted)
  {
    for (Pair<MavenProject, MavenProjectChanges> update : updated) {
      if (update.getFirst().getFile().getName().endsWith("pom.xml")) {
        final List<MavenArtifact> dependencies = update.getFirst().getDependencies();
        vulnerabilityService.scan(dependencies);
      }
    }
  }
}
