package org.sonatype.vul_highlighter.listener;

import org.sonatype.vul_highlighter.service.VulnerabilityService;

import com.intellij.openapi.project.Project;
import org.jetbrains.idea.maven.project.MavenProjectsManager;
import org.jetbrains.idea.maven.project.MavenProjectsManager.Listener;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MavenProjectListener implements Listener
{
  private final static Logger LOGGER = LoggerFactory.getLogger(MavenProjectListener.class);

  private final Project project;

  public MavenProjectListener(final Project project) {
    this.project = project;
  }

  @Override
  public void activated() {
    LOGGER.info("Maven project {} activated", project.getName());
    checkForUpdate();
  }

  @Override
  public void projectImportCompleted() {
    LOGGER.info("Maven project {} imported", project.getName());
    checkForUpdate();
  }

  private void checkForUpdate() {
    final MavenProjectsManager mavenProjectsManager = MavenProjectsManager.getInstance(project);
    final VulnerabilityService vulnerabilityService = VulnerabilityService.getInstance();

    mavenProjectsManager.getProjects().stream()
        .filter(mavenProjects -> mavenProjects.getDisplayName().equals(project.getName()))
        .findFirst()
        .ifPresent(p -> vulnerabilityService.scan(p.getDependencies()));
  }
}
