package org.sonatype.vul_highlighter.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.sonatype.goodies.packageurl.PackageUrl;
import org.sonatype.vul_highlighter.module.Gav;
import org.sonatype.vul_highlighter.module.ScannedComponent;
import org.sonatype.vul_highlighter.service.VulnerabilityService;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.idea.maven.model.MavenArtifact;

public class VulnerabilityServiceImpl implements VulnerabilityService
{
  private Map<String, ScannedComponent> components = new HashMap<>();

  public VulnerabilityServiceImpl() {
  }

  @Override
  public void scan(final List<MavenArtifact> artifacts) {
    final List<PackageUrl> packageUrls = convertToPurl(artifacts);

    // TODO Perform a scan

  }

  private List<PackageUrl> convertToPurl(final List<MavenArtifact> artifacts) {
    return artifacts.stream().map(artifact -> PackageUrl.builder().type("maven")
        .namespace(artifact.getGroupId())
        .name(artifact.getArtifactId())
        .version(artifact.getVersion())
        .build())
        .collect(Collectors.toList());
  }

  @Nullable
  @Override
  public Map<String, ScannedComponent> getState() {
    return components;
  }

  @Override
  public void loadState(@NotNull final Map<String, ScannedComponent> state) {

  }
}
