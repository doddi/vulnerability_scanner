package com.doddi.vulnerability_scanner_idea_plugin.system.maven;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.sonatype.goodies.packageurl.PackageUrl;

import com.doddi.vulnerability_scanner_idea_plugin.entity.LibraryToScan;
import com.doddi.vulnerability_scanner_idea_plugin.entity.VulnerableComponent;
import com.doddi.vulnerability_scanner_idea_plugin.service.scanners.dummy.DummyVulnerableComponent;
import org.junit.Before;
import org.junit.Test;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;

public class MavenPopulatorTest
{
  private final PackageUrl vulnerablePackageUrl = PackageUrl.parse("maven:org.apache.struts:struts2-core:2.3.20");

  private final PackageUrl noneVulnerablePackageUrl = PackageUrl.parse("maven:org.apache.struts:struts2-core:2.3.19");

  private MavenPopulator underTest;

  @Before
  public void setUp() {
    underTest = new MavenPopulator();

    Set<LibraryToScan> libraries = new HashSet<>();
    libraries.add(new LibraryToScan(vulnerablePackageUrl, null));
    libraries.add(new LibraryToScan(noneVulnerablePackageUrl, null));

    List<VulnerableComponent> vulnerableComponents = new ArrayList<>();
    final DummyVulnerableComponent component = new DummyVulnerableComponent();
    component.setPackageUrl(vulnerablePackageUrl);
    vulnerableComponents.add(component);

    underTest.populate(libraries, vulnerableComponents);
  }

  @Test
  public void showPackageVulnerable() {
    assertThat(underTest.isPackageVulnerable(vulnerablePackageUrl).isPresent(), is(true));
    assertThat(underTest.isPackageVulnerable(noneVulnerablePackageUrl).isPresent(), is(false));
  }
}
