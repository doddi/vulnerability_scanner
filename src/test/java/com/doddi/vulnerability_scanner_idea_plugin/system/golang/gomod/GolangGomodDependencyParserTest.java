package com.doddi.vulnerability_scanner_idea_plugin.system.golang.gomod;

import java.util.Set;

import org.sonatype.goodies.packageurl.PackageUrl;

import com.doddi.vulnerability_scanner_idea_plugin.entity.LibraryToScan;
import org.junit.Before;
import org.junit.Test;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;

public class GolangGomodDependencyParserTest
{
  private GolangGomodDependencyParser underTest;

  @Before
  public void setUp() throws Exception {
    underTest = new GolangGomodDependencyParser();
  }

  @Test
  public void findsWrappedDependencies() {
    final String path = getClass().getResource("go.mod").getPath();
    final Set<LibraryToScan> dependencies = underTest.getDependencies(path);

    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/davecgh/go-spew@v1.1.1");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/go-gitea/gitea@v1.2.3");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/gophish/gophish@v0.1.2");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/kr/pretty@v0.1.0");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/stretchr/testify@v1.4.0");
    assertThatContainsLibrary(dependencies, "pkg:golang/golang.org/x/crypto@v0.0.0-20190308221718-c2843e01d9a2");
    assertThatContainsLibrary(dependencies, "pkg:golang/gopkg.in/check.v1@v1.0.0-20190902080502-41f04d3bba15");
    assertThatContainsLibrary(dependencies, "pkg:golang/gopkg.in/yaml.v2@v2.2.4");
  }

  @Test
  public void findsInlineDependencies() {
    final String path = getClass().getResource("go_inline.mod").getPath();
    final Set<LibraryToScan> dependencies = underTest.getDependencies(path);

    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/davecgh/go-spew@v1.1.1");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/go-gitea/gitea@v1.2.3");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/gophish/gophish@v0.1.2");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/kr/pretty@v0.1.0");
    assertThatContainsLibrary(dependencies, "pkg:golang/github.com/stretchr/testify@v1.4.0");
    assertThatContainsLibrary(dependencies, "pkg:golang/golang.org/x/crypto@v0.0.0-20190308221718-c2843e01d9a2");
    assertThatContainsLibrary(dependencies, "pkg:golang/gopkg.in/check.v1@v1.0.0-20190902080502-41f04d3bba15");
    assertThatContainsLibrary(dependencies, "pkg:golang/gopkg.in/yaml.v2@v2.2.4");
  }

  private void assertThatContainsLibrary(final Set<LibraryToScan> dependencies,
                                         final String purl)
  {
    final PackageUrl packageUrl = PackageUrl.parse(purl);

    assertThat(dependencies.stream()
        .anyMatch(p -> p.getPackageUrl().equals(packageUrl)), is(true));
  }
}